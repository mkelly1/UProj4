version: 2.1

commands:
  destroy-environment:
    description: Destroy back-end and front-end cloudformation stacks given a workflow ID.
    parameters:
      # Add parameter here   
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
            # Your code here
            exit 1

  revert-migrations:
    description: Revert the last migration if successfully run in the current workflow.
    parameters:
      # Add parameter here     
    steps:
      - run:
          name: Revert migrations
          # Add when this will run
          command: |
            # Curl command here to see if there was a successful migration associated with the workflow id, store result in SUCCESS variable
            SUCCESS = 1
            if(( $SUCCESS==1 )); 
            then
            #  cd ~/project/backend
            #  npm install
            #  Add revert code here. You can find this in the Getting Started section.
              exit 1
            fi
            
jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    working_directory: ~/frontend
    steps:
      - checkout
      - restore_cache:
          keys: frontend-build-{{ .BuildNum }}
      - run:
          name: Install front-end
          command: npm install
      - run:
          name: Lint front-end
          command: npm run lint
      - run:
          name: Build front-end
          command: npm run build
      - save_cache:
          paths: frontend/node_modules
          key: frontend-build-{{ .BuildNum }}

  build-backend:
    docker:
      - image: circleci/node:13.8.0
    working_directory: ~/backend
    steps:
      - checkout
      - restore_cache:
          keys: backend-build-{{ .BuildNum }}
      - run:
          name: Install back-end
          command: npm install
      - run:
          name: Lint back-end
          command: npm run lint
      - run:
          name: Build back-end
          command: npm run build
      - save_cache:
          paths: backend/node_modules
          key: backend-build-{{ .BuildNum }}

  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: frontend-build-{{ .BuildNum }}
      - run:
          name: Front-end test
          command: |
             npm run test

  test-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: backend-build-{{ .BuildNum }}
      - run:
          name: Back-end test
          command: |
             npm run test
            
  scan-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: frontend-build-{{ .BuildNum }}
      - run:
          name: Front-end scan
          command: |
             npm audit
  scan-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: backend-build-{{ .BuildNum }}
      - run:
          name: Back-end scan
          command: |
             npm audit

workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires: [build-frontend]
      - test-backend:
          requires: [build-backend]
      - scan-backend:
          requires: [build-backend]
      - scan-frontend:
          requires: [build-frontend]